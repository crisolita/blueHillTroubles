const tokenAbi = {
  contractName: "Token",
  abi: [
    {
      inputs: [
        {
          internalType: "uint256",
          name: "_totalSupply",
          type: "uint256",
        },
        {
          internalType: "address",
          name: "_burnerAddress",
          type: "address",
        },
      ],
      stateMutability: "nonpayable",
      type: "constructor",
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: true,
          internalType: "address",
          name: "owner",
          type: "address",
        },
        {
          indexed: true,
          internalType: "address",
          name: "spender",
          type: "address",
        },
        {
          indexed: false,
          internalType: "uint256",
          name: "value",
          type: "uint256",
        },
      ],
      name: "Approval",
      type: "event",
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: true,
          internalType: "address",
          name: "from",
          type: "address",
        },
        {
          indexed: true,
          internalType: "address",
          name: "to",
          type: "address",
        },
        {
          indexed: false,
          internalType: "uint256",
          name: "value",
          type: "uint256",
        },
      ],
      name: "Transfer",
      type: "event",
    },
    {
      inputs: [
        {
          internalType: "address",
          name: "owner",
          type: "address",
        },
        {
          internalType: "address",
          name: "spender",
          type: "address",
        },
      ],
      name: "allowance",
      outputs: [
        {
          internalType: "uint256",
          name: "",
          type: "uint256",
        },
      ],
      stateMutability: "view",
      type: "function",
      constant: true,
    },
    {
      inputs: [
        {
          internalType: "address",
          name: "spender",
          type: "address",
        },
        {
          internalType: "uint256",
          name: "amount",
          type: "uint256",
        },
      ],
      name: "approve",
      outputs: [
        {
          internalType: "bool",
          name: "",
          type: "bool",
        },
      ],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [
        {
          internalType: "address",
          name: "account",
          type: "address",
        },
      ],
      name: "balanceOf",
      outputs: [
        {
          internalType: "uint256",
          name: "",
          type: "uint256",
        },
      ],
      stateMutability: "view",
      type: "function",
      constant: true,
    },
    {
      inputs: [],
      name: "decimals",
      outputs: [
        {
          internalType: "uint8",
          name: "",
          type: "uint8",
        },
      ],
      stateMutability: "view",
      type: "function",
      constant: true,
    },
    {
      inputs: [
        {
          internalType: "address",
          name: "spender",
          type: "address",
        },
        {
          internalType: "uint256",
          name: "subtractedValue",
          type: "uint256",
        },
      ],
      name: "decreaseAllowance",
      outputs: [
        {
          internalType: "bool",
          name: "",
          type: "bool",
        },
      ],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [
        {
          internalType: "address",
          name: "spender",
          type: "address",
        },
        {
          internalType: "uint256",
          name: "addedValue",
          type: "uint256",
        },
      ],
      name: "increaseAllowance",
      outputs: [
        {
          internalType: "bool",
          name: "",
          type: "bool",
        },
      ],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [],
      name: "name",
      outputs: [
        {
          internalType: "string",
          name: "",
          type: "string",
        },
      ],
      stateMutability: "view",
      type: "function",
      constant: true,
    },
    {
      inputs: [],
      name: "symbol",
      outputs: [
        {
          internalType: "string",
          name: "",
          type: "string",
        },
      ],
      stateMutability: "view",
      type: "function",
      constant: true,
    },
    {
      inputs: [],
      name: "totalSupply",
      outputs: [
        {
          internalType: "uint256",
          name: "",
          type: "uint256",
        },
      ],
      stateMutability: "view",
      type: "function",
      constant: true,
    },
    {
      inputs: [
        {
          internalType: "address",
          name: "sender",
          type: "address",
        },
        {
          internalType: "address",
          name: "recipient",
          type: "address",
        },
        {
          internalType: "uint256",
          name: "amount",
          type: "uint256",
        },
      ],
      name: "transferFrom",
      outputs: [
        {
          internalType: "bool",
          name: "",
          type: "bool",
        },
      ],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [
        {
          internalType: "address",
          name: "recipient",
          type: "address",
        },
        {
          internalType: "uint256",
          name: "amount",
          type: "uint256",
        },
      ],
      name: "transfer",
      outputs: [
        {
          internalType: "bool",
          name: "",
          type: "bool",
        },
      ],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [
        {
          internalType: "address",
          name: "account",
          type: "address",
        },
        {
          internalType: "uint256",
          name: "amount",
          type: "uint256",
        },
      ],
      name: "depositController",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [],
      name: "totalAvailable",
      outputs: [
        {
          internalType: "uint256",
          name: "",
          type: "uint256",
        },
      ],
      stateMutability: "view",
      type: "function",
      constant: true,
    },
    {
      inputs: [
        {
          internalType: "contract Controller",
          name: "_controller",
          type: "address",
        },
      ],
      name: "setController",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
  ],
  metadata:
    '{"compiler":{"version":"0.6.9+commit.3e3065ac"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"uint256","name":"_totalSupply","type":"uint256"},{"internalType":"address","name":"_burnerAddress","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"depositController","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"contract Controller","name":"_controller","type":"address"}],"name":"setController","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalAvailable","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"methods":{"allowance(address,address)":{"details":"See {IERC20-allowance}."},"approve(address,uint256)":{"details":"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{"details":"See {IERC20-balanceOf}."},"decimals()":{"details":"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"decreaseAllowance(address,uint256)":{"details":"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."},"increaseAllowance(address,uint256)":{"details":"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{"details":"See {IERC20-totalSupply}."},"transferFrom(address,address,uint256)":{"details":"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``\'s tokens of at least `amount`."}}},"userdoc":{"methods":{}}},"settings":{"compilationTarget":{"/home/seik/Dev/Work/bluehill-blockchain/contracts/Token.sol":"Token"},"evmVersion":"istanbul","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":false,"runs":200},"remappings":[]},"sources":{"/home/seik/Dev/Work/bluehill-blockchain/contracts/Controller.sol":{"keccak256":"0x30b0844f7d790faf68ed6784e8da16ff37b322befe330f0a0ec26d7136c962ab","license":"UNLICENSED","urls":["bzz-raw://f25da0d015f13fceefee3a75f0f823886160ee6cacf405f6068990ca2e24a3ba","dweb:/ipfs/Qmf76TT5kMbVXAiFH5fU6G8bgQCXUQafCX96vLz1mmFQTF"]},"/home/seik/Dev/Work/bluehill-blockchain/contracts/Poll.sol":{"keccak256":"0xe678d884d535e4fbfddf8b8cd03250e94f6ae300705e797104ab398c443f96bd","license":"UNLICENSED","urls":["bzz-raw://0c3c22437e955fb2c615a215317a09bf2a73f3523aad7a5e8bd5373e6d5f1c7f","dweb:/ipfs/QmVn3VKJk4vZ5SeVpSw3sQEvbAPgxPQBjz2Bv9y49dyzTs"]},"/home/seik/Dev/Work/bluehill-blockchain/contracts/Token.sol":{"keccak256":"0x9437a83dcb6f3d75a454f6687f69bdf7f9d5c25c2771840f77e5fd34630d82d7","license":"UNLICENSED","urls":["bzz-raw://038baab15c2c514605082e5fbea7497332fe7f3e017e308f382eecd9f48e1c85","dweb:/ipfs/QmcEEBdKkkcxaXjftuH9KKXS7RaFV5ivez2K9gfXkijSKT"]},"/home/seik/Dev/Work/bluehill-blockchain/contracts/WalletRegistry.sol":{"keccak256":"0xa02b96c5b6418ff8edb74a0a0ca0a55976c91726736506900e9aab43bf5d9438","license":"UNLICENSED","urls":["bzz-raw://6cc76908edea694c64ba29db32a65bb4368e1b4d9a3846cb1cb036f5324aa87a","dweb:/ipfs/QmZCJjf19gm84tG2ZPUpoAGmUUEnoTSEzZYL6uqQeGo6wL"]},"@openzeppelin/contracts/GSN/Context.sol":{"keccak256":"0xc6fb4c940628ca2cde81ed6d20fc9ff456b60f55aafef555f43a86a2dda7ad9f","license":"MIT","urls":["bzz-raw://f17dda58954a84ffca3d53c0b6435bad7f5c42ab3a9c4603db2f1aef00edae4e","dweb:/ipfs/QmehW99QmmzKvnqTsprsApDF7mK2JVo6nnrZ47znhLTFjh"]},"@openzeppelin/contracts/access/Ownable.sol":{"keccak256":"0x4bd6402ca6b3419008c2b482aff54e66836e8cb4eba2680e42ac5884ae6424fc","license":"MIT","urls":["bzz-raw://8f9f711fb8d0d92aeea1c327e3845d13ca1fa8f142e47f8723cd5b3106fb29a3","dweb:/ipfs/QmVQUReDW9f4zGqhizwHnyU8EntMs95tbASdqkGncnikba"]},"@openzeppelin/contracts/math/SafeMath.sol":{"keccak256":"0xaa0e11a791bc975d581a4f5b7a8d9c16a880a354c89312318ae072ae3e740409","license":"MIT","urls":["bzz-raw://982d8b344f76193834260436d74c81e5a8f9e89106bb4cd72bbaabda4f3f59c2","dweb:/ipfs/QmSrvP5TkQRhKDVCTpsV3uaKLBhkt7PjUY89vdtM9o5ybK"]},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"keccak256":"0x4daf1e5f59e8ca32aca35cffc32dede6515b06d0d7e5013cd78bb24094fad719","license":"MIT","urls":["bzz-raw://a93703bec9d9f5e4aa3f027d5db956ce94716f58182fc53ebf90bed7968bca51","dweb:/ipfs/QmPdV3o4ADR9ABUNKwabR3GxaeGQX7xMdQur2aqEi5KnT9"]},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"keccak256":"0x5c26b39d26f7ed489e555d955dcd3e01872972e71fdd1528e93ec164e4f23385","license":"MIT","urls":["bzz-raw://efdc632af6960cf865dbc113665ea1f5b90eab75cc40ec062b2f6ae6da582017","dweb:/ipfs/QmfAZFDuG62vxmAN9DnXApv7e7PMzPqi4RkqqZHLMSQiY5"]},"@openzeppelin/contracts/utils/Address.sol":{"keccak256":"0x934dbc549a8df514456047ad1c6ab257127a03f4109272834c30e596bbe10d1d","license":"MIT","urls":["bzz-raw://33cf247ade00a28c632dfe2c2521e1952f467c6081b89375c34b1eb297441d9b","dweb:/ipfs/QmYGNAHCtN1m3QDynteTeVCfwFZBZRpGJNMjxwVBUifnfB"]}},"version":1}',
  bytecode:
    "",
  deployedBytecode:
    "0x608060405234801561001057600080fd5b50600436106100ea5760003560e01c806370a082311161008c578063a457c2d711610066578063a457c2d714610473578063a9059cbb146104d9578063d85d7f5b1461053f578063dd62ed3e1461055d576100ea565b806370a082311461035457806392eefe9b146103ac57806395d89b41146103f0576100ea565b806323b872dd116100c857806323b872dd146101f65780632a9ae4dc1461027c578063313ce567146102ca57806339509351146102ee576100ea565b806306fdde03146100ef578063095ea7b31461017257806318160ddd146101d8575b600080fd5b6100f76105d5565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561013757808201518184015260208101905061011c565b50505050905090810190601f1680156101645780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101be6004803603604081101561018857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610677565b604051808215151515815260200191505060405180910390f35b6101e0610695565b6040518082815260200191505060405180910390f35b6102626004803603606081101561020c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061069f565b604051808215151515815260200191505060405180910390f35b6102c86004803603604081101561029257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610778565b005b6102d261086a565b604051808260ff1660ff16815260200191505060405180910390f35b61033a6004803603604081101561030457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610881565b604051808215151515815260200191505060405180910390f35b6103966004803603602081101561036a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610934565b6040518082815260200191505060405180910390f35b6103ee600480360360208110156103c257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061097c565b005b6103f8610a84565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561043857808201518184015260208101905061041d565b50505050905090810190601f1680156104655780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6104bf6004803603604081101561048957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610b26565b604051808215151515815260200191505060405180910390f35b610525600480360360408110156104ef57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610bf3565b604051808215151515815260200191505060405180910390f35b610547610cb1565b6040518082815260200191505060405180910390f35b6105bf6004803603604081101561057357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610cec565b6040518082815260200191505060405180910390f35b606060038054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561066d5780601f106106425761010080835404028352916020019161066d565b820191906000526020600020905b81548152906001019060200180831161065057829003601f168201915b5050505050905090565b600061068b610684610dfb565b8484610e03565b6001905092915050565b6000600254905090565b60006106ac848484610ffa565b61076d846106b8610dfb565b610768856040518060600160405280602881526020016113ec60289139600160008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600061071e610dfb565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546112bb9092919063ffffffff16565b610e03565b600190509392505050565b600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635b86f59983836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b15801561082157600080fd5b505af1158015610835573d6000803e3d6000fd5b50505050610865600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1682610bf3565b505050565b6000600560009054906101000a900460ff16905090565b600061092a61088e610dfb565b84610925856001600061089f610dfb565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610d7390919063ffffffff16565b610e03565b6001905092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600073ffffffffffffffffffffffffffffffffffffffff16600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610a40576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f436f6e74726f6c6c6572206164647265737320616c7265616479207365742e0081525060200191505060405180910390fd5b80600560016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b606060048054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610b1c5780601f10610af157610100808354040283529160200191610b1c565b820191906000526020600020905b815481529060010190602001808311610aff57829003601f168201915b5050505050905090565b6000610be9610b33610dfb565b84610be4856040518060600160405280602581526020016114806025913960016000610b5d610dfb565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546112bb9092919063ffffffff16565b610e03565b6001905092915050565b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610c9c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602381526020018061145d6023913960400191505060405180910390fd5b610ca7338484610ffa565b6001905092915050565b6000610cde600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610934565b610ce6610695565b03905090565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600080828401905083811015610df1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610e89576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806114396024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610f0f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806113a46022913960400191505060405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611080576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806114146025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611106576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001806113816023913960400191505060405180910390fd5b61111183838361137b565b61117c816040518060600160405280602681526020016113c6602691396000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546112bb9092919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061120f816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610d7390919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b6000838311158290611368576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561132d578082015181840152602081019050611312565b50505050905090810190601f16801561135a5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b50505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737343616e6e6f74207472616e736665722066726f6d206275726e6572206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa26469706673582212200f06038fa2ed5198b5e3c2b2256d1a1192618a42b196a358e594a8af6541227264736f6c63430006090033",
  immutableReferences: {},
  sourceMap:
    "210:1291:3:-:0;;;296:244;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2007:141:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2087:4;2079:5;:12;;;;;;;;;;;;:::i;:::-;;2111:6;2101:7;:16;;;;;;;;;;;;:::i;:::-;;2139:2;2127:9;;:14;;;;;;;;;;;;;;;;;;2007:141;;417:31:3::1;423:10;435:12;417:5;;;:31;;:::i;:::-;474:14;458:13;;:30;;;;;;;;;;;;;;;;;;530:1;498:10;;:35;;;;;;;;;;;;;;;;;;296:244:::0;;210:1291;;7829:370:9;7931:1;7912:21;;:7;:21;;;;7904:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7980:49;8009:1;8013:7;8022:6;7980:20;;;:49;;:::i;:::-;8055:24;8072:6;8055:12;;:16;;;;;;:24;;;;:::i;:::-;8040:12;:39;;;;8110:30;8133:6;8110:9;:18;8120:7;8110:18;;;;;;;;;;;;;;;;:22;;;;;;:30;;;;:::i;:::-;8089:9;:18;8099:7;8089:18;;;;;;;;;;;;;;;:51;;;;8176:7;8155:37;;8172:1;8155:37;;;8185:6;8155:37;;;;;;;;;;;;;;;;;;7829:370;;:::o;10691:92::-;;;;:::o;867:176:8:-;925:7;944:9;960:1;956;:5;944:17;;984:1;979;:6;;971:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1035:1;1028:8;;;867:176;;;;:::o;210:1291:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  deployedSourceMap:
    "210:1291:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2213:81:9;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4249:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3256:98;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4875:317;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;928:174:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3115:81:9;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;5587:215;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3412:117;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1283:216:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2407:85:9;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6289:266;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;546:326:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1151:126;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3962:149:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2213:81;2250:13;2282:5;2275:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2213:81;:::o;4249:166::-;4332:4;4348:39;4357:12;:10;:12::i;:::-;4371:7;4380:6;4348:8;:39::i;:::-;4404:4;4397:11;;4249:166;;;;:::o;3256:98::-;3309:7;3335:12;;3328:19;;3256:98;:::o;4875:317::-;4981:4;4997:36;5007:6;5015:9;5026:6;4997:9;:36::i;:::-;5043:121;5052:6;5060:12;:10;:12::i;:::-;5074:89;5112:6;5074:89;;;;;;;;;;;;;;;;;:11;:19;5086:6;5074:19;;;;;;;;;;;;;;;:33;5094:12;:10;:12::i;:::-;5074:33;;;;;;;;;;;;;;;;:37;;:89;;;;;:::i;:::-;5043:8;:121::i;:::-;5181:4;5174:11;;4875:317;;;;;:::o;928:174:3:-;1005:10;;;;;;;;;;;:26;;;1032:7;1041:6;1005:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1058:37;1075:10;;;;;;;;;;;1088:6;1058:8;:37::i;:::-;;928:174;;:::o;3115:81:9:-;3156:5;3180:9;;;;;;;;;;;3173:16;;3115:81;:::o;5587:215::-;5675:4;5691:83;5700:12;:10;:12::i;:::-;5714:7;5723:50;5762:10;5723:11;:25;5735:12;:10;:12::i;:::-;5723:25;;;;;;;;;;;;;;;:34;5749:7;5723:34;;;;;;;;;;;;;;;;:38;;:50;;;;:::i;:::-;5691:8;:83::i;:::-;5791:4;5784:11;;5587:215;;;;:::o;3412:117::-;3478:7;3504:9;:18;3514:7;3504:18;;;;;;;;;;;;;;;;3497:25;;3412:117;;;:::o;1283:216:3:-;1399:1;1368:33;;1376:10;;;;;;;;;;;1368:33;;;1347:111;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1481:11;1468:10;;:24;;;;;;;;;;;;;;;;;;1283:216;:::o;2407:85:9:-;2446:13;2478:7;2471:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2407:85;:::o;6289:266::-;6382:4;6398:129;6407:12;:10;:12::i;:::-;6421:7;6430:96;6469:15;6430:96;;;;;;;;;;;;;;;;;:11;:25;6442:12;:10;:12::i;:::-;6430:25;;;;;;;;;;;;;;;:34;6456:7;6430:34;;;;;;;;;;;;;;;;:38;;:96;;;;;:::i;:::-;6398:8;:129::i;:::-;6544:4;6537:11;;6289:266;;;;:::o;546:326:3:-;664:4;719:13;;;;;;;;;;;705:27;;:10;:27;;;;684:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;803:40;813:10;825:9;836:6;803:9;:40::i;:::-;861:4;854:11;;546:326;;;;:::o;1151:126::-;1198:7;1246:24;1256:13;;;;;;;;;;;1246:9;:24::i;:::-;1224:19;:17;:19::i;:::-;:46;1217:53;;1151:126;:::o;3962:149:9:-;4051:7;4077:11;:18;4089:5;4077:18;;;;;;;;;;;;;;;:27;4096:7;4077:27;;;;;;;;;;;;;;;;4070:34;;3962:149;;;;:::o;867:176:8:-;925:7;944:9;960:1;956;:5;944:17;;984:1;979;:6;;971:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1035:1;1028:8;;;867:176;;;;:::o;768:104:6:-;821:15;855:10;848:17;;768:104;:::o;9353:340:9:-;9471:1;9454:19;;:5;:19;;;;9446:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9551:1;9532:21;;:7;:21;;;;9524:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9633:6;9603:11;:18;9615:5;9603:18;;;;;;;;;;;;;;;:27;9622:7;9603:27;;;;;;;;;;;;;;;:36;;;;9670:7;9654:32;;9663:5;9654:32;;;9679:6;9654:32;;;;;;;;;;;;;;;;;;9353:340;;;:::o;7029:530::-;7152:1;7134:20;;:6;:20;;;;7126:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7235:1;7214:23;;:9;:23;;;;7206:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7288:47;7309:6;7317:9;7328:6;7288:20;:47::i;:::-;7366:71;7388:6;7366:71;;;;;;;;;;;;;;;;;:9;:17;7376:6;7366:17;;;;;;;;;;;;;;;;:21;;:71;;;;;:::i;:::-;7346:9;:17;7356:6;7346:17;;;;;;;;;;;;;;;:91;;;;7470:32;7495:6;7470:9;:20;7480:9;7470:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;7447:9;:20;7457:9;7447:20;;;;;;;;;;;;;;;:55;;;;7534:9;7517:35;;7526:6;7517:35;;;7545:6;7517:35;;;;;;;;;;;;;;;;;;7029:530;;;:::o;1725:187:8:-;1811:7;1843:1;1838;:6;;1846:12;1830:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1869:9;1885:1;1881;:5;1869:17;;1904:1;1897:8;;;1725:187;;;;;:::o;10691:92:9:-;;;;:::o",
  source:
    '// SPDX-License-Identifier: UNLICENSED\npragma solidity >=0.6.0 <0.7.0;\n\nimport "./Controller.sol";\n\nimport "@openzeppelin/contracts/token/ERC20/ERC20.sol";\nimport "@openzeppelin/contracts/access/Ownable.sol";\n\ncontract Token is ERC20 {\n    Controller controller;\n\n    address burnerAddress;\n\n    constructor(uint256 _totalSupply, address _burnerAddress)\n        public\n        ERC20("Blue Hill", "BHF")\n    {\n        _mint(msg.sender, _totalSupply);\n        burnerAddress = _burnerAddress;\n        controller = Controller(address(0));\n    }\n\n    function transfer(address recipient, uint256 amount)\n        public\n        virtual\n        override\n        returns (bool)\n    {\n        require(\n            msg.sender != burnerAddress,\n            "Cannot transfer from burner address"\n        );\n        _transfer(msg.sender, recipient, amount);\n\n        return true;\n    }\n\n    // Method to deposit tokens in the controller\n    function depositController(address account, uint256 amount) public {\n        controller.increaseBalance(account, amount);\n        transfer(address(controller), amount);\n    }\n\n    // Total supply removing burned tokens\n    function totalAvailable() public view returns (uint256) {\n        return super.totalSupply() - balanceOf(burnerAddress);\n    }\n\n    function setController(Controller _controller) public {\n        require(\n            address(controller) == address(0),\n            "Controller address already set."\n        );\n        controller = _controller;\n    }\n}\n',
  sourcePath: "/home/seik/Dev/Work/bluehill-blockchain/contracts/Token.sol",
  ast: {
    absolutePath: "/home/seik/Dev/Work/bluehill-blockchain/contracts/Token.sol",
    exportedSymbols: {
      Token: [1240],
    },
    id: 1241,
    license: "UNLICENSED",
    nodeType: "SourceUnit",
    nodes: [
      {
        id: 1111,
        literals: ["solidity", ">=", "0.6", ".0", "<", "0.7", ".0"],
        nodeType: "PragmaDirective",
        src: "39:31:3",
      },
      {
        absolutePath:
          "/home/seik/Dev/Work/bluehill-blockchain/contracts/Controller.sol",
        file: "./Controller.sol",
        id: 1112,
        nodeType: "ImportDirective",
        scope: 1241,
        sourceUnit: 866,
        src: "72:26:3",
        symbolAliases: [],
        unitAlias: "",
      },
      {
        absolutePath: "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        file: "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        id: 1113,
        nodeType: "ImportDirective",
        scope: 1241,
        sourceUnit: 2157,
        src: "100:55:3",
        symbolAliases: [],
        unitAlias: "",
      },
      {
        absolutePath: "@openzeppelin/contracts/access/Ownable.sol",
        file: "@openzeppelin/contracts/access/Ownable.sol",
        id: 1114,
        nodeType: "ImportDirective",
        scope: 1241,
        sourceUnit: 1454,
        src: "156:52:3",
        symbolAliases: [],
        unitAlias: "",
      },
      {
        abstract: false,
        baseContracts: [
          {
            arguments: null,
            baseName: {
              contractScope: null,
              id: 1115,
              name: "ERC20",
              nodeType: "UserDefinedTypeName",
              referencedDeclaration: 2156,
              src: "228:5:3",
              typeDescriptions: {
                typeIdentifier: "t_contract$_ERC20_$2156",
                typeString: "contract ERC20",
              },
            },
            id: 1116,
            nodeType: "InheritanceSpecifier",
            src: "228:5:3",
          },
        ],
        contractDependencies: [1344, 2156, 2234],
        contractKind: "contract",
        documentation: null,
        fullyImplemented: true,
        id: 1240,
        linearizedBaseContracts: [1240, 2156, 2234, 1344],
        name: "Token",
        nodeType: "ContractDefinition",
        nodes: [
          {
            constant: false,
            id: 1118,
            mutability: "mutable",
            name: "controller",
            nodeType: "VariableDeclaration",
            overrides: null,
            scope: 1240,
            src: "240:21:3",
            stateVariable: true,
            storageLocation: "default",
            typeDescriptions: {
              typeIdentifier: "t_contract$_Controller_$865",
              typeString: "contract Controller",
            },
            typeName: {
              contractScope: null,
              id: 1117,
              name: "Controller",
              nodeType: "UserDefinedTypeName",
              referencedDeclaration: 865,
              src: "240:10:3",
              typeDescriptions: {
                typeIdentifier: "t_contract$_Controller_$865",
                typeString: "contract Controller",
              },
            },
            value: null,
            visibility: "internal",
          },
          {
            constant: false,
            id: 1120,
            mutability: "mutable",
            name: "burnerAddress",
            nodeType: "VariableDeclaration",
            overrides: null,
            scope: 1240,
            src: "268:21:3",
            stateVariable: true,
            storageLocation: "default",
            typeDescriptions: {
              typeIdentifier: "t_address",
              typeString: "address",
            },
            typeName: {
              id: 1119,
              name: "address",
              nodeType: "ElementaryTypeName",
              src: "268:7:3",
              stateMutability: "nonpayable",
              typeDescriptions: {
                typeIdentifier: "t_address",
                typeString: "address",
              },
            },
            value: null,
            visibility: "internal",
          },
          {
            body: {
              id: 1150,
              nodeType: "Block",
              src: "407:133:3",
              statements: [
                {
                  expression: {
                    argumentTypes: null,
                    arguments: [
                      {
                        argumentTypes: null,
                        expression: {
                          argumentTypes: null,
                          id: 1132,
                          name: "msg",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: -15,
                          src: "423:3:3",
                          typeDescriptions: {
                            typeIdentifier: "t_magic_message",
                            typeString: "msg",
                          },
                        },
                        id: 1133,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        lValueRequested: false,
                        memberName: "sender",
                        nodeType: "MemberAccess",
                        referencedDeclaration: null,
                        src: "423:10:3",
                        typeDescriptions: {
                          typeIdentifier: "t_address_payable",
                          typeString: "address payable",
                        },
                      },
                      {
                        argumentTypes: null,
                        id: 1134,
                        name: "_totalSupply",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 1122,
                        src: "435:12:3",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: "t_address_payable",
                          typeString: "address payable",
                        },
                        {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      ],
                      id: 1131,
                      name: "_mint",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 2032,
                      src: "417:5:3",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        typeString: "function (address,uint256)",
                      },
                    },
                    id: 1135,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    names: [],
                    nodeType: "FunctionCall",
                    src: "417:31:3",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_tuple$__$",
                      typeString: "tuple()",
                    },
                  },
                  id: 1136,
                  nodeType: "ExpressionStatement",
                  src: "417:31:3",
                },
                {
                  expression: {
                    argumentTypes: null,
                    id: 1139,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      argumentTypes: null,
                      id: 1137,
                      name: "burnerAddress",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 1120,
                      src: "458:13:3",
                      typeDescriptions: {
                        typeIdentifier: "t_address",
                        typeString: "address",
                      },
                    },
                    nodeType: "Assignment",
                    operator: "=",
                    rightHandSide: {
                      argumentTypes: null,
                      id: 1138,
                      name: "_burnerAddress",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 1124,
                      src: "474:14:3",
                      typeDescriptions: {
                        typeIdentifier: "t_address",
                        typeString: "address",
                      },
                    },
                    src: "458:30:3",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                  },
                  id: 1140,
                  nodeType: "ExpressionStatement",
                  src: "458:30:3",
                },
                {
                  expression: {
                    argumentTypes: null,
                    id: 1148,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      argumentTypes: null,
                      id: 1141,
                      name: "controller",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 1118,
                      src: "498:10:3",
                      typeDescriptions: {
                        typeIdentifier: "t_contract$_Controller_$865",
                        typeString: "contract Controller",
                      },
                    },
                    nodeType: "Assignment",
                    operator: "=",
                    rightHandSide: {
                      argumentTypes: null,
                      arguments: [
                        {
                          argumentTypes: null,
                          arguments: [
                            {
                              argumentTypes: null,
                              hexValue: "30",
                              id: 1145,
                              isConstant: false,
                              isLValue: false,
                              isPure: true,
                              kind: "number",
                              lValueRequested: false,
                              nodeType: "Literal",
                              src: "530:1:3",
                              subdenomination: null,
                              typeDescriptions: {
                                typeIdentifier: "t_rational_0_by_1",
                                typeString: "int_const 0",
                              },
                              value: "0",
                            },
                          ],
                          expression: {
                            argumentTypes: [
                              {
                                typeIdentifier: "t_rational_0_by_1",
                                typeString: "int_const 0",
                              },
                            ],
                            id: 1144,
                            isConstant: false,
                            isLValue: false,
                            isPure: true,
                            lValueRequested: false,
                            nodeType: "ElementaryTypeNameExpression",
                            src: "522:7:3",
                            typeDescriptions: {
                              typeIdentifier: "t_type$_t_address_$",
                              typeString: "type(address)",
                            },
                            typeName: {
                              id: 1143,
                              name: "address",
                              nodeType: "ElementaryTypeName",
                              src: "522:7:3",
                              typeDescriptions: {
                                typeIdentifier: null,
                                typeString: null,
                              },
                            },
                          },
                          id: 1146,
                          isConstant: false,
                          isLValue: false,
                          isPure: true,
                          kind: "typeConversion",
                          lValueRequested: false,
                          names: [],
                          nodeType: "FunctionCall",
                          src: "522:10:3",
                          tryCall: false,
                          typeDescriptions: {
                            typeIdentifier: "t_address_payable",
                            typeString: "address payable",
                          },
                        },
                      ],
                      expression: {
                        argumentTypes: [
                          {
                            typeIdentifier: "t_address_payable",
                            typeString: "address payable",
                          },
                        ],
                        id: 1142,
                        name: "Controller",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 865,
                        src: "511:10:3",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_type$_t_contract$_Controller_$865_$",
                          typeString: "type(contract Controller)",
                        },
                      },
                      id: 1147,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      kind: "typeConversion",
                      lValueRequested: false,
                      names: [],
                      nodeType: "FunctionCall",
                      src: "511:22:3",
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: "t_contract$_Controller_$865",
                        typeString: "contract Controller",
                      },
                    },
                    src: "498:35:3",
                    typeDescriptions: {
                      typeIdentifier: "t_contract$_Controller_$865",
                      typeString: "contract Controller",
                    },
                  },
                  id: 1149,
                  nodeType: "ExpressionStatement",
                  src: "498:35:3",
                },
              ],
            },
            documentation: null,
            id: 1151,
            implemented: true,
            kind: "constructor",
            modifiers: [
              {
                arguments: [
                  {
                    argumentTypes: null,
                    hexValue: "426c75652048696c6c",
                    id: 1127,
                    isConstant: false,
                    isLValue: false,
                    isPure: true,
                    kind: "string",
                    lValueRequested: false,
                    nodeType: "Literal",
                    src: "383:11:3",
                    subdenomination: null,
                    typeDescriptions: {
                      typeIdentifier:
                        "t_stringliteral_beaf33b17b22c768a7691074c3f7482498a9cb2f40fa18521a35d5211ff312e7",
                      typeString: 'literal_string "Blue Hill"',
                    },
                    value: "Blue Hill",
                  },
                  {
                    argumentTypes: null,
                    hexValue: "424846",
                    id: 1128,
                    isConstant: false,
                    isLValue: false,
                    isPure: true,
                    kind: "string",
                    lValueRequested: false,
                    nodeType: "Literal",
                    src: "396:5:3",
                    subdenomination: null,
                    typeDescriptions: {
                      typeIdentifier:
                        "t_stringliteral_b01460bd6d6841d0923f88df435a87f465abaed5d9e13e1496e2302428d5aa80",
                      typeString: 'literal_string "BHF"',
                    },
                    value: "BHF",
                  },
                ],
                id: 1129,
                modifierName: {
                  argumentTypes: null,
                  id: 1126,
                  name: "ERC20",
                  nodeType: "Identifier",
                  overloadedDeclarations: [],
                  referencedDeclaration: 2156,
                  src: "377:5:3",
                  typeDescriptions: {
                    typeIdentifier: "t_type$_t_contract$_ERC20_$2156_$",
                    typeString: "type(contract ERC20)",
                  },
                },
                nodeType: "ModifierInvocation",
                src: "377:25:3",
              },
            ],
            name: "",
            nodeType: "FunctionDefinition",
            overrides: null,
            parameters: {
              id: 1125,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 1122,
                  mutability: "mutable",
                  name: "_totalSupply",
                  nodeType: "VariableDeclaration",
                  overrides: null,
                  scope: 1151,
                  src: "308:20:3",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                  typeName: {
                    id: 1121,
                    name: "uint256",
                    nodeType: "ElementaryTypeName",
                    src: "308:7:3",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  value: null,
                  visibility: "internal",
                },
                {
                  constant: false,
                  id: 1124,
                  mutability: "mutable",
                  name: "_burnerAddress",
                  nodeType: "VariableDeclaration",
                  overrides: null,
                  scope: 1151,
                  src: "330:22:3",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_address",
                    typeString: "address",
                  },
                  typeName: {
                    id: 1123,
                    name: "address",
                    nodeType: "ElementaryTypeName",
                    src: "330:7:3",
                    stateMutability: "nonpayable",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                  },
                  value: null,
                  visibility: "internal",
                },
              ],
              src: "307:46:3",
            },
            returnParameters: {
              id: 1130,
              nodeType: "ParameterList",
              parameters: [],
              src: "407:0:3",
            },
            scope: 1240,
            src: "296:244:3",
            stateMutability: "nonpayable",
            virtual: false,
            visibility: "public",
          },
          {
            baseFunctions: [1777],
            body: {
              id: 1178,
              nodeType: "Block",
              src: "674:198:3",
              statements: [
                {
                  expression: {
                    argumentTypes: null,
                    arguments: [
                      {
                        argumentTypes: null,
                        commonType: {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                        id: 1165,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        lValueRequested: false,
                        leftExpression: {
                          argumentTypes: null,
                          expression: {
                            argumentTypes: null,
                            id: 1162,
                            name: "msg",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: -15,
                            src: "705:3:3",
                            typeDescriptions: {
                              typeIdentifier: "t_magic_message",
                              typeString: "msg",
                            },
                          },
                          id: 1163,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          memberName: "sender",
                          nodeType: "MemberAccess",
                          referencedDeclaration: null,
                          src: "705:10:3",
                          typeDescriptions: {
                            typeIdentifier: "t_address_payable",
                            typeString: "address payable",
                          },
                        },
                        nodeType: "BinaryOperation",
                        operator: "!=",
                        rightExpression: {
                          argumentTypes: null,
                          id: 1164,
                          name: "burnerAddress",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 1120,
                          src: "719:13:3",
                          typeDescriptions: {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                        },
                        src: "705:27:3",
                        typeDescriptions: {
                          typeIdentifier: "t_bool",
                          typeString: "bool",
                        },
                      },
                      {
                        argumentTypes: null,
                        hexValue:
                          "43616e6e6f74207472616e736665722066726f6d206275726e65722061646472657373",
                        id: 1166,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        kind: "string",
                        lValueRequested: false,
                        nodeType: "Literal",
                        src: "746:37:3",
                        subdenomination: null,
                        typeDescriptions: {
                          typeIdentifier:
                            "t_stringliteral_e9e37d52ed4fa5bb86064665ec03e9928be6922aeab693dd5f6b588d97427c32",
                          typeString:
                            'literal_string "Cannot transfer from burner address"',
                        },
                        value: "Cannot transfer from burner address",
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: "t_bool",
                          typeString: "bool",
                        },
                        {
                          typeIdentifier:
                            "t_stringliteral_e9e37d52ed4fa5bb86064665ec03e9928be6922aeab693dd5f6b588d97427c32",
                          typeString:
                            'literal_string "Cannot transfer from burner address"',
                        },
                      ],
                      id: 1161,
                      name: "require",
                      nodeType: "Identifier",
                      overloadedDeclarations: [-18, -18],
                      referencedDeclaration: -18,
                      src: "684:7:3",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        typeString: "function (bool,string memory) pure",
                      },
                    },
                    id: 1167,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    names: [],
                    nodeType: "FunctionCall",
                    src: "684:109:3",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_tuple$__$",
                      typeString: "tuple()",
                    },
                  },
                  id: 1168,
                  nodeType: "ExpressionStatement",
                  src: "684:109:3",
                },
                {
                  expression: {
                    argumentTypes: null,
                    arguments: [
                      {
                        argumentTypes: null,
                        expression: {
                          argumentTypes: null,
                          id: 1170,
                          name: "msg",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: -15,
                          src: "813:3:3",
                          typeDescriptions: {
                            typeIdentifier: "t_magic_message",
                            typeString: "msg",
                          },
                        },
                        id: 1171,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        lValueRequested: false,
                        memberName: "sender",
                        nodeType: "MemberAccess",
                        referencedDeclaration: null,
                        src: "813:10:3",
                        typeDescriptions: {
                          typeIdentifier: "t_address_payable",
                          typeString: "address payable",
                        },
                      },
                      {
                        argumentTypes: null,
                        id: 1172,
                        name: "recipient",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 1153,
                        src: "825:9:3",
                        typeDescriptions: {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                      },
                      {
                        argumentTypes: null,
                        id: 1173,
                        name: "amount",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 1155,
                        src: "836:6:3",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: "t_address_payable",
                          typeString: "address payable",
                        },
                        {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                        {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      ],
                      id: 1169,
                      name: "_transfer",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 1977,
                      src: "803:9:3",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        typeString: "function (address,address,uint256)",
                      },
                    },
                    id: 1174,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    names: [],
                    nodeType: "FunctionCall",
                    src: "803:40:3",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_tuple$__$",
                      typeString: "tuple()",
                    },
                  },
                  id: 1175,
                  nodeType: "ExpressionStatement",
                  src: "803:40:3",
                },
                {
                  expression: {
                    argumentTypes: null,
                    hexValue: "74727565",
                    id: 1176,
                    isConstant: false,
                    isLValue: false,
                    isPure: true,
                    kind: "bool",
                    lValueRequested: false,
                    nodeType: "Literal",
                    src: "861:4:3",
                    subdenomination: null,
                    typeDescriptions: {
                      typeIdentifier: "t_bool",
                      typeString: "bool",
                    },
                    value: "true",
                  },
                  functionReturnParameters: 1160,
                  id: 1177,
                  nodeType: "Return",
                  src: "854:11:3",
                },
              ],
            },
            documentation: null,
            functionSelector: "a9059cbb",
            id: 1179,
            implemented: true,
            kind: "function",
            modifiers: [],
            name: "transfer",
            nodeType: "FunctionDefinition",
            overrides: {
              id: 1157,
              nodeType: "OverrideSpecifier",
              overrides: [],
              src: "638:8:3",
            },
            parameters: {
              id: 1156,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 1153,
                  mutability: "mutable",
                  name: "recipient",
                  nodeType: "VariableDeclaration",
                  overrides: null,
                  scope: 1179,
                  src: "564:17:3",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_address",
                    typeString: "address",
                  },
                  typeName: {
                    id: 1152,
                    name: "address",
                    nodeType: "ElementaryTypeName",
                    src: "564:7:3",
                    stateMutability: "nonpayable",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                  },
                  value: null,
                  visibility: "internal",
                },
                {
                  constant: false,
                  id: 1155,
                  mutability: "mutable",
                  name: "amount",
                  nodeType: "VariableDeclaration",
                  overrides: null,
                  scope: 1179,
                  src: "583:14:3",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                  typeName: {
                    id: 1154,
                    name: "uint256",
                    nodeType: "ElementaryTypeName",
                    src: "583:7:3",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  value: null,
                  visibility: "internal",
                },
              ],
              src: "563:35:3",
            },
            returnParameters: {
              id: 1160,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 1159,
                  mutability: "mutable",
                  name: "",
                  nodeType: "VariableDeclaration",
                  overrides: null,
                  scope: 1179,
                  src: "664:4:3",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_bool",
                    typeString: "bool",
                  },
                  typeName: {
                    id: 1158,
                    name: "bool",
                    nodeType: "ElementaryTypeName",
                    src: "664:4:3",
                    typeDescriptions: {
                      typeIdentifier: "t_bool",
                      typeString: "bool",
                    },
                  },
                  value: null,
                  visibility: "internal",
                },
              ],
              src: "663:6:3",
            },
            scope: 1240,
            src: "546:326:3",
            stateMutability: "nonpayable",
            virtual: true,
            visibility: "public",
          },
          {
            body: {
              id: 1201,
              nodeType: "Block",
              src: "995:107:3",
              statements: [
                {
                  expression: {
                    argumentTypes: null,
                    arguments: [
                      {
                        argumentTypes: null,
                        id: 1189,
                        name: "account",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 1181,
                        src: "1032:7:3",
                        typeDescriptions: {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                      },
                      {
                        argumentTypes: null,
                        id: 1190,
                        name: "amount",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 1183,
                        src: "1041:6:3",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                        {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      ],
                      expression: {
                        argumentTypes: null,
                        id: 1186,
                        name: "controller",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 1118,
                        src: "1005:10:3",
                        typeDescriptions: {
                          typeIdentifier: "t_contract$_Controller_$865",
                          typeString: "contract Controller",
                        },
                      },
                      id: 1188,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      memberName: "increaseBalance",
                      nodeType: "MemberAccess",
                      referencedDeclaration: 530,
                      src: "1005:26:3",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        typeString: "function (address,uint256) external",
                      },
                    },
                    id: 1191,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    names: [],
                    nodeType: "FunctionCall",
                    src: "1005:43:3",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_tuple$__$",
                      typeString: "tuple()",
                    },
                  },
                  id: 1192,
                  nodeType: "ExpressionStatement",
                  src: "1005:43:3",
                },
                {
                  expression: {
                    argumentTypes: null,
                    arguments: [
                      {
                        argumentTypes: null,
                        arguments: [
                          {
                            argumentTypes: null,
                            id: 1196,
                            name: "controller",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 1118,
                            src: "1075:10:3",
                            typeDescriptions: {
                              typeIdentifier: "t_contract$_Controller_$865",
                              typeString: "contract Controller",
                            },
                          },
                        ],
                        expression: {
                          argumentTypes: [
                            {
                              typeIdentifier: "t_contract$_Controller_$865",
                              typeString: "contract Controller",
                            },
                          ],
                          id: 1195,
                          isConstant: false,
                          isLValue: false,
                          isPure: true,
                          lValueRequested: false,
                          nodeType: "ElementaryTypeNameExpression",
                          src: "1067:7:3",
                          typeDescriptions: {
                            typeIdentifier: "t_type$_t_address_$",
                            typeString: "type(address)",
                          },
                          typeName: {
                            id: 1194,
                            name: "address",
                            nodeType: "ElementaryTypeName",
                            src: "1067:7:3",
                            typeDescriptions: {
                              typeIdentifier: null,
                              typeString: null,
                            },
                          },
                        },
                        id: 1197,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        kind: "typeConversion",
                        lValueRequested: false,
                        names: [],
                        nodeType: "FunctionCall",
                        src: "1067:19:3",
                        tryCall: false,
                        typeDescriptions: {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                      },
                      {
                        argumentTypes: null,
                        id: 1198,
                        name: "amount",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 1183,
                        src: "1088:6:3",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                        {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      ],
                      id: 1193,
                      name: "transfer",
                      nodeType: "Identifier",
                      overloadedDeclarations: [1179],
                      referencedDeclaration: 1179,
                      src: "1058:8:3",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        typeString: "function (address,uint256) returns (bool)",
                      },
                    },
                    id: 1199,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    names: [],
                    nodeType: "FunctionCall",
                    src: "1058:37:3",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_bool",
                      typeString: "bool",
                    },
                  },
                  id: 1200,
                  nodeType: "ExpressionStatement",
                  src: "1058:37:3",
                },
              ],
            },
            documentation: null,
            functionSelector: "2a9ae4dc",
            id: 1202,
            implemented: true,
            kind: "function",
            modifiers: [],
            name: "depositController",
            nodeType: "FunctionDefinition",
            overrides: null,
            parameters: {
              id: 1184,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 1181,
                  mutability: "mutable",
                  name: "account",
                  nodeType: "VariableDeclaration",
                  overrides: null,
                  scope: 1202,
                  src: "955:15:3",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_address",
                    typeString: "address",
                  },
                  typeName: {
                    id: 1180,
                    name: "address",
                    nodeType: "ElementaryTypeName",
                    src: "955:7:3",
                    stateMutability: "nonpayable",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                  },
                  value: null,
                  visibility: "internal",
                },
                {
                  constant: false,
                  id: 1183,
                  mutability: "mutable",
                  name: "amount",
                  nodeType: "VariableDeclaration",
                  overrides: null,
                  scope: 1202,
                  src: "972:14:3",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                  typeName: {
                    id: 1182,
                    name: "uint256",
                    nodeType: "ElementaryTypeName",
                    src: "972:7:3",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  value: null,
                  visibility: "internal",
                },
              ],
              src: "954:33:3",
            },
            returnParameters: {
              id: 1185,
              nodeType: "ParameterList",
              parameters: [],
              src: "995:0:3",
            },
            scope: 1240,
            src: "928:174:3",
            stateMutability: "nonpayable",
            virtual: false,
            visibility: "public",
          },
          {
            body: {
              id: 1215,
              nodeType: "Block",
              src: "1207:70:3",
              statements: [
                {
                  expression: {
                    argumentTypes: null,
                    commonType: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                    id: 1213,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      argumentTypes: null,
                      arguments: [],
                      expression: {
                        argumentTypes: [],
                        expression: {
                          argumentTypes: null,
                          id: 1207,
                          name: "super",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: -25,
                          src: "1224:5:3",
                          typeDescriptions: {
                            typeIdentifier: "t_super$_Token_$1240",
                            typeString: "contract super Token",
                          },
                        },
                        id: 1208,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        lValueRequested: false,
                        memberName: "totalSupply",
                        nodeType: "MemberAccess",
                        referencedDeclaration: 1742,
                        src: "1224:17:3",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_function_internal_view$__$returns$_t_uint256_$",
                          typeString: "function () view returns (uint256)",
                        },
                      },
                      id: 1209,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: "functionCall",
                      lValueRequested: false,
                      names: [],
                      nodeType: "FunctionCall",
                      src: "1224:19:3",
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    nodeType: "BinaryOperation",
                    operator: "-",
                    rightExpression: {
                      argumentTypes: null,
                      arguments: [
                        {
                          argumentTypes: null,
                          id: 1211,
                          name: "burnerAddress",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 1120,
                          src: "1256:13:3",
                          typeDescriptions: {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                        },
                      ],
                      expression: {
                        argumentTypes: [
                          {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                        ],
                        id: 1210,
                        name: "balanceOf",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 1756,
                        src: "1246:9:3",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                          typeString:
                            "function (address) view returns (uint256)",
                        },
                      },
                      id: 1212,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: "functionCall",
                      lValueRequested: false,
                      names: [],
                      nodeType: "FunctionCall",
                      src: "1246:24:3",
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    src: "1224:46:3",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  functionReturnParameters: 1206,
                  id: 1214,
                  nodeType: "Return",
                  src: "1217:53:3",
                },
              ],
            },
            documentation: null,
            functionSelector: "d85d7f5b",
            id: 1216,
            implemented: true,
            kind: "function",
            modifiers: [],
            name: "totalAvailable",
            nodeType: "FunctionDefinition",
            overrides: null,
            parameters: {
              id: 1203,
              nodeType: "ParameterList",
              parameters: [],
              src: "1174:2:3",
            },
            returnParameters: {
              id: 1206,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 1205,
                  mutability: "mutable",
                  name: "",
                  nodeType: "VariableDeclaration",
                  overrides: null,
                  scope: 1216,
                  src: "1198:7:3",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                  typeName: {
                    id: 1204,
                    name: "uint256",
                    nodeType: "ElementaryTypeName",
                    src: "1198:7:3",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  value: null,
                  visibility: "internal",
                },
              ],
              src: "1197:9:3",
            },
            scope: 1240,
            src: "1151:126:3",
            stateMutability: "view",
            virtual: false,
            visibility: "public",
          },
          {
            body: {
              id: 1238,
              nodeType: "Block",
              src: "1337:162:3",
              statements: [
                {
                  expression: {
                    argumentTypes: null,
                    arguments: [
                      {
                        argumentTypes: null,
                        commonType: {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                        id: 1230,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        lValueRequested: false,
                        leftExpression: {
                          argumentTypes: null,
                          arguments: [
                            {
                              argumentTypes: null,
                              id: 1224,
                              name: "controller",
                              nodeType: "Identifier",
                              overloadedDeclarations: [],
                              referencedDeclaration: 1118,
                              src: "1376:10:3",
                              typeDescriptions: {
                                typeIdentifier: "t_contract$_Controller_$865",
                                typeString: "contract Controller",
                              },
                            },
                          ],
                          expression: {
                            argumentTypes: [
                              {
                                typeIdentifier: "t_contract$_Controller_$865",
                                typeString: "contract Controller",
                              },
                            ],
                            id: 1223,
                            isConstant: false,
                            isLValue: false,
                            isPure: true,
                            lValueRequested: false,
                            nodeType: "ElementaryTypeNameExpression",
                            src: "1368:7:3",
                            typeDescriptions: {
                              typeIdentifier: "t_type$_t_address_$",
                              typeString: "type(address)",
                            },
                            typeName: {
                              id: 1222,
                              name: "address",
                              nodeType: "ElementaryTypeName",
                              src: "1368:7:3",
                              typeDescriptions: {
                                typeIdentifier: null,
                                typeString: null,
                              },
                            },
                          },
                          id: 1225,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          kind: "typeConversion",
                          lValueRequested: false,
                          names: [],
                          nodeType: "FunctionCall",
                          src: "1368:19:3",
                          tryCall: false,
                          typeDescriptions: {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                        },
                        nodeType: "BinaryOperation",
                        operator: "==",
                        rightExpression: {
                          argumentTypes: null,
                          arguments: [
                            {
                              argumentTypes: null,
                              hexValue: "30",
                              id: 1228,
                              isConstant: false,
                              isLValue: false,
                              isPure: true,
                              kind: "number",
                              lValueRequested: false,
                              nodeType: "Literal",
                              src: "1399:1:3",
                              subdenomination: null,
                              typeDescriptions: {
                                typeIdentifier: "t_rational_0_by_1",
                                typeString: "int_const 0",
                              },
                              value: "0",
                            },
                          ],
                          expression: {
                            argumentTypes: [
                              {
                                typeIdentifier: "t_rational_0_by_1",
                                typeString: "int_const 0",
                              },
                            ],
                            id: 1227,
                            isConstant: false,
                            isLValue: false,
                            isPure: true,
                            lValueRequested: false,
                            nodeType: "ElementaryTypeNameExpression",
                            src: "1391:7:3",
                            typeDescriptions: {
                              typeIdentifier: "t_type$_t_address_$",
                              typeString: "type(address)",
                            },
                            typeName: {
                              id: 1226,
                              name: "address",
                              nodeType: "ElementaryTypeName",
                              src: "1391:7:3",
                              typeDescriptions: {
                                typeIdentifier: null,
                                typeString: null,
                              },
                            },
                          },
                          id: 1229,
                          isConstant: false,
                          isLValue: false,
                          isPure: true,
                          kind: "typeConversion",
                          lValueRequested: false,
                          names: [],
                          nodeType: "FunctionCall",
                          src: "1391:10:3",
                          tryCall: false,
                          typeDescriptions: {
                            typeIdentifier: "t_address_payable",
                            typeString: "address payable",
                          },
                        },
                        src: "1368:33:3",
                        typeDescriptions: {
                          typeIdentifier: "t_bool",
                          typeString: "bool",
                        },
                      },
                      {
                        argumentTypes: null,
                        hexValue:
                          "436f6e74726f6c6c6572206164647265737320616c7265616479207365742e",
                        id: 1231,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        kind: "string",
                        lValueRequested: false,
                        nodeType: "Literal",
                        src: "1415:33:3",
                        subdenomination: null,
                        typeDescriptions: {
                          typeIdentifier:
                            "t_stringliteral_a8b10fcad2182345bafe9591ee1801d5f6f6038bbdcdcaf9262b8bc8cb4798b0",
                          typeString:
                            'literal_string "Controller address already set."',
                        },
                        value: "Controller address already set.",
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: "t_bool",
                          typeString: "bool",
                        },
                        {
                          typeIdentifier:
                            "t_stringliteral_a8b10fcad2182345bafe9591ee1801d5f6f6038bbdcdcaf9262b8bc8cb4798b0",
                          typeString:
                            'literal_string "Controller address already set."',
                        },
                      ],
                      id: 1221,
                      name: "require",
                      nodeType: "Identifier",
                      overloadedDeclarations: [-18, -18],
                      referencedDeclaration: -18,
                      src: "1347:7:3",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        typeString: "function (bool,string memory) pure",
                      },
                    },
                    id: 1232,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    names: [],
                    nodeType: "FunctionCall",
                    src: "1347:111:3",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_tuple$__$",
                      typeString: "tuple()",
                    },
                  },
                  id: 1233,
                  nodeType: "ExpressionStatement",
                  src: "1347:111:3",
                },
                {
                  expression: {
                    argumentTypes: null,
                    id: 1236,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      argumentTypes: null,
                      id: 1234,
                      name: "controller",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 1118,
                      src: "1468:10:3",
                      typeDescriptions: {
                        typeIdentifier: "t_contract$_Controller_$865",
                        typeString: "contract Controller",
                      },
                    },
                    nodeType: "Assignment",
                    operator: "=",
                    rightHandSide: {
                      argumentTypes: null,
                      id: 1235,
                      name: "_controller",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 1218,
                      src: "1481:11:3",
                      typeDescriptions: {
                        typeIdentifier: "t_contract$_Controller_$865",
                        typeString: "contract Controller",
                      },
                    },
                    src: "1468:24:3",
                    typeDescriptions: {
                      typeIdentifier: "t_contract$_Controller_$865",
                      typeString: "contract Controller",
                    },
                  },
                  id: 1237,
                  nodeType: "ExpressionStatement",
                  src: "1468:24:3",
                },
              ],
            },
            documentation: null,
            functionSelector: "92eefe9b",
            id: 1239,
            implemented: true,
            kind: "function",
            modifiers: [],
            name: "setController",
            nodeType: "FunctionDefinition",
            overrides: null,
            parameters: {
              id: 1219,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 1218,
                  mutability: "mutable",
                  name: "_controller",
                  nodeType: "VariableDeclaration",
                  overrides: null,
                  scope: 1239,
                  src: "1306:22:3",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_contract$_Controller_$865",
                    typeString: "contract Controller",
                  },
                  typeName: {
                    contractScope: null,
                    id: 1217,
                    name: "Controller",
                    nodeType: "UserDefinedTypeName",
                    referencedDeclaration: 865,
                    src: "1306:10:3",
                    typeDescriptions: {
                      typeIdentifier: "t_contract$_Controller_$865",
                      typeString: "contract Controller",
                    },
                  },
                  value: null,
                  visibility: "internal",
                },
              ],
              src: "1305:24:3",
            },
            returnParameters: {
              id: 1220,
              nodeType: "ParameterList",
              parameters: [],
              src: "1337:0:3",
            },
            scope: 1240,
            src: "1283:216:3",
            stateMutability: "nonpayable",
            virtual: false,
            visibility: "public",
          },
        ],
        scope: 1241,
        src: "210:1291:3",
      },
    ],
    src: "39:1463:3",
  },
  legacyAST: {
    absolutePath: "/home/seik/Dev/Work/bluehill-blockchain/contracts/Token.sol",
    exportedSymbols: {
      Token: [1240],
    },
    id: 1241,
    license: "UNLICENSED",
    nodeType: "SourceUnit",
    nodes: [
      {
        id: 1111,
        literals: ["solidity", ">=", "0.6", ".0", "<", "0.7", ".0"],
        nodeType: "PragmaDirective",
        src: "39:31:3",
      },
      {
        absolutePath:
          "/home/seik/Dev/Work/bluehill-blockchain/contracts/Controller.sol",
        file: "./Controller.sol",
        id: 1112,
        nodeType: "ImportDirective",
        scope: 1241,
        sourceUnit: 866,
        src: "72:26:3",
        symbolAliases: [],
        unitAlias: "",
      },
      {
        absolutePath: "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        file: "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        id: 1113,
        nodeType: "ImportDirective",
        scope: 1241,
        sourceUnit: 2157,
        src: "100:55:3",
        symbolAliases: [],
        unitAlias: "",
      },
      {
        absolutePath: "@openzeppelin/contracts/access/Ownable.sol",
        file: "@openzeppelin/contracts/access/Ownable.sol",
        id: 1114,
        nodeType: "ImportDirective",
        scope: 1241,
        sourceUnit: 1454,
        src: "156:52:3",
        symbolAliases: [],
        unitAlias: "",
      },
      {
        abstract: false,
        baseContracts: [
          {
            arguments: null,
            baseName: {
              contractScope: null,
              id: 1115,
              name: "ERC20",
              nodeType: "UserDefinedTypeName",
              referencedDeclaration: 2156,
              src: "228:5:3",
              typeDescriptions: {
                typeIdentifier: "t_contract$_ERC20_$2156",
                typeString: "contract ERC20",
              },
            },
            id: 1116,
            nodeType: "InheritanceSpecifier",
            src: "228:5:3",
          },
        ],
        contractDependencies: [1344, 2156, 2234],
        contractKind: "contract",
        documentation: null,
        fullyImplemented: true,
        id: 1240,
        linearizedBaseContracts: [1240, 2156, 2234, 1344],
        name: "Token",
        nodeType: "ContractDefinition",
        nodes: [
          {
            constant: false,
            id: 1118,
            mutability: "mutable",
            name: "controller",
            nodeType: "VariableDeclaration",
            overrides: null,
            scope: 1240,
            src: "240:21:3",
            stateVariable: true,
            storageLocation: "default",
            typeDescriptions: {
              typeIdentifier: "t_contract$_Controller_$865",
              typeString: "contract Controller",
            },
            typeName: {
              contractScope: null,
              id: 1117,
              name: "Controller",
              nodeType: "UserDefinedTypeName",
              referencedDeclaration: 865,
              src: "240:10:3",
              typeDescriptions: {
                typeIdentifier: "t_contract$_Controller_$865",
                typeString: "contract Controller",
              },
            },
            value: null,
            visibility: "internal",
          },
          {
            constant: false,
            id: 1120,
            mutability: "mutable",
            name: "burnerAddress",
            nodeType: "VariableDeclaration",
            overrides: null,
            scope: 1240,
            src: "268:21:3",
            stateVariable: true,
            storageLocation: "default",
            typeDescriptions: {
              typeIdentifier: "t_address",
              typeString: "address",
            },
            typeName: {
              id: 1119,
              name: "address",
              nodeType: "ElementaryTypeName",
              src: "268:7:3",
              stateMutability: "nonpayable",
              typeDescriptions: {
                typeIdentifier: "t_address",
                typeString: "address",
              },
            },
            value: null,
            visibility: "internal",
          },
          {
            body: {
              id: 1150,
              nodeType: "Block",
              src: "407:133:3",
              statements: [
                {
                  expression: {
                    argumentTypes: null,
                    arguments: [
                      {
                        argumentTypes: null,
                        expression: {
                          argumentTypes: null,
                          id: 1132,
                          name: "msg",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: -15,
                          src: "423:3:3",
                          typeDescriptions: {
                            typeIdentifier: "t_magic_message",
                            typeString: "msg",
                          },
                        },
                        id: 1133,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        lValueRequested: false,
                        memberName: "sender",
                        nodeType: "MemberAccess",
                        referencedDeclaration: null,
                        src: "423:10:3",
                        typeDescriptions: {
                          typeIdentifier: "t_address_payable",
                          typeString: "address payable",
                        },
                      },
                      {
                        argumentTypes: null,
                        id: 1134,
                        name: "_totalSupply",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 1122,
                        src: "435:12:3",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: "t_address_payable",
                          typeString: "address payable",
                        },
                        {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      ],
                      id: 1131,
                      name: "_mint",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 2032,
                      src: "417:5:3",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        typeString: "function (address,uint256)",
                      },
                    },
                    id: 1135,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    names: [],
                    nodeType: "FunctionCall",
                    src: "417:31:3",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_tuple$__$",
                      typeString: "tuple()",
                    },
                  },
                  id: 1136,
                  nodeType: "ExpressionStatement",
                  src: "417:31:3",
                },
                {
                  expression: {
                    argumentTypes: null,
                    id: 1139,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      argumentTypes: null,
                      id: 1137,
                      name: "burnerAddress",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 1120,
                      src: "458:13:3",
                      typeDescriptions: {
                        typeIdentifier: "t_address",
                        typeString: "address",
                      },
                    },
                    nodeType: "Assignment",
                    operator: "=",
                    rightHandSide: {
                      argumentTypes: null,
                      id: 1138,
                      name: "_burnerAddress",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 1124,
                      src: "474:14:3",
                      typeDescriptions: {
                        typeIdentifier: "t_address",
                        typeString: "address",
                      },
                    },
                    src: "458:30:3",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                  },
                  id: 1140,
                  nodeType: "ExpressionStatement",
                  src: "458:30:3",
                },
                {
                  expression: {
                    argumentTypes: null,
                    id: 1148,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      argumentTypes: null,
                      id: 1141,
                      name: "controller",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 1118,
                      src: "498:10:3",
                      typeDescriptions: {
                        typeIdentifier: "t_contract$_Controller_$865",
                        typeString: "contract Controller",
                      },
                    },
                    nodeType: "Assignment",
                    operator: "=",
                    rightHandSide: {
                      argumentTypes: null,
                      arguments: [
                        {
                          argumentTypes: null,
                          arguments: [
                            {
                              argumentTypes: null,
                              hexValue: "30",
                              id: 1145,
                              isConstant: false,
                              isLValue: false,
                              isPure: true,
                              kind: "number",
                              lValueRequested: false,
                              nodeType: "Literal",
                              src: "530:1:3",
                              subdenomination: null,
                              typeDescriptions: {
                                typeIdentifier: "t_rational_0_by_1",
                                typeString: "int_const 0",
                              },
                              value: "0",
                            },
                          ],
                          expression: {
                            argumentTypes: [
                              {
                                typeIdentifier: "t_rational_0_by_1",
                                typeString: "int_const 0",
                              },
                            ],
                            id: 1144,
                            isConstant: false,
                            isLValue: false,
                            isPure: true,
                            lValueRequested: false,
                            nodeType: "ElementaryTypeNameExpression",
                            src: "522:7:3",
                            typeDescriptions: {
                              typeIdentifier: "t_type$_t_address_$",
                              typeString: "type(address)",
                            },
                            typeName: {
                              id: 1143,
                              name: "address",
                              nodeType: "ElementaryTypeName",
                              src: "522:7:3",
                              typeDescriptions: {
                                typeIdentifier: null,
                                typeString: null,
                              },
                            },
                          },
                          id: 1146,
                          isConstant: false,
                          isLValue: false,
                          isPure: true,
                          kind: "typeConversion",
                          lValueRequested: false,
                          names: [],
                          nodeType: "FunctionCall",
                          src: "522:10:3",
                          tryCall: false,
                          typeDescriptions: {
                            typeIdentifier: "t_address_payable",
                            typeString: "address payable",
                          },
                        },
                      ],
                      expression: {
                        argumentTypes: [
                          {
                            typeIdentifier: "t_address_payable",
                            typeString: "address payable",
                          },
                        ],
                        id: 1142,
                        name: "Controller",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 865,
                        src: "511:10:3",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_type$_t_contract$_Controller_$865_$",
                          typeString: "type(contract Controller)",
                        },
                      },
                      id: 1147,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      kind: "typeConversion",
                      lValueRequested: false,
                      names: [],
                      nodeType: "FunctionCall",
                      src: "511:22:3",
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: "t_contract$_Controller_$865",
                        typeString: "contract Controller",
                      },
                    },
                    src: "498:35:3",
                    typeDescriptions: {
                      typeIdentifier: "t_contract$_Controller_$865",
                      typeString: "contract Controller",
                    },
                  },
                  id: 1149,
                  nodeType: "ExpressionStatement",
                  src: "498:35:3",
                },
              ],
            },
            documentation: null,
            id: 1151,
            implemented: true,
            kind: "constructor",
            modifiers: [
              {
                arguments: [
                  {
                    argumentTypes: null,
                    hexValue: "426c75652048696c6c",
                    id: 1127,
                    isConstant: false,
                    isLValue: false,
                    isPure: true,
                    kind: "string",
                    lValueRequested: false,
                    nodeType: "Literal",
                    src: "383:11:3",
                    subdenomination: null,
                    typeDescriptions: {
                      typeIdentifier:
                        "t_stringliteral_beaf33b17b22c768a7691074c3f7482498a9cb2f40fa18521a35d5211ff312e7",
                      typeString: 'literal_string "Blue Hill"',
                    },
                    value: "Blue Hill",
                  },
                  {
                    argumentTypes: null,
                    hexValue: "424846",
                    id: 1128,
                    isConstant: false,
                    isLValue: false,
                    isPure: true,
                    kind: "string",
                    lValueRequested: false,
                    nodeType: "Literal",
                    src: "396:5:3",
                    subdenomination: null,
                    typeDescriptions: {
                      typeIdentifier:
                        "t_stringliteral_b01460bd6d6841d0923f88df435a87f465abaed5d9e13e1496e2302428d5aa80",
                      typeString: 'literal_string "BHF"',
                    },
                    value: "BHF",
                  },
                ],
                id: 1129,
                modifierName: {
                  argumentTypes: null,
                  id: 1126,
                  name: "ERC20",
                  nodeType: "Identifier",
                  overloadedDeclarations: [],
                  referencedDeclaration: 2156,
                  src: "377:5:3",
                  typeDescriptions: {
                    typeIdentifier: "t_type$_t_contract$_ERC20_$2156_$",
                    typeString: "type(contract ERC20)",
                  },
                },
                nodeType: "ModifierInvocation",
                src: "377:25:3",
              },
            ],
            name: "",
            nodeType: "FunctionDefinition",
            overrides: null,
            parameters: {
              id: 1125,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 1122,
                  mutability: "mutable",
                  name: "_totalSupply",
                  nodeType: "VariableDeclaration",
                  overrides: null,
                  scope: 1151,
                  src: "308:20:3",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                  typeName: {
                    id: 1121,
                    name: "uint256",
                    nodeType: "ElementaryTypeName",
                    src: "308:7:3",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  value: null,
                  visibility: "internal",
                },
                {
                  constant: false,
                  id: 1124,
                  mutability: "mutable",
                  name: "_burnerAddress",
                  nodeType: "VariableDeclaration",
                  overrides: null,
                  scope: 1151,
                  src: "330:22:3",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_address",
                    typeString: "address",
                  },
                  typeName: {
                    id: 1123,
                    name: "address",
                    nodeType: "ElementaryTypeName",
                    src: "330:7:3",
                    stateMutability: "nonpayable",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                  },
                  value: null,
                  visibility: "internal",
                },
              ],
              src: "307:46:3",
            },
            returnParameters: {
              id: 1130,
              nodeType: "ParameterList",
              parameters: [],
              src: "407:0:3",
            },
            scope: 1240,
            src: "296:244:3",
            stateMutability: "nonpayable",
            virtual: false,
            visibility: "public",
          },
          {
            baseFunctions: [1777],
            body: {
              id: 1178,
              nodeType: "Block",
              src: "674:198:3",
              statements: [
                {
                  expression: {
                    argumentTypes: null,
                    arguments: [
                      {
                        argumentTypes: null,
                        commonType: {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                        id: 1165,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        lValueRequested: false,
                        leftExpression: {
                          argumentTypes: null,
                          expression: {
                            argumentTypes: null,
                            id: 1162,
                            name: "msg",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: -15,
                            src: "705:3:3",
                            typeDescriptions: {
                              typeIdentifier: "t_magic_message",
                              typeString: "msg",
                            },
                          },
                          id: 1163,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          memberName: "sender",
                          nodeType: "MemberAccess",
                          referencedDeclaration: null,
                          src: "705:10:3",
                          typeDescriptions: {
                            typeIdentifier: "t_address_payable",
                            typeString: "address payable",
                          },
                        },
                        nodeType: "BinaryOperation",
                        operator: "!=",
                        rightExpression: {
                          argumentTypes: null,
                          id: 1164,
                          name: "burnerAddress",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 1120,
                          src: "719:13:3",
                          typeDescriptions: {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                        },
                        src: "705:27:3",
                        typeDescriptions: {
                          typeIdentifier: "t_bool",
                          typeString: "bool",
                        },
                      },
                      {
                        argumentTypes: null,
                        hexValue:
                          "43616e6e6f74207472616e736665722066726f6d206275726e65722061646472657373",
                        id: 1166,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        kind: "string",
                        lValueRequested: false,
                        nodeType: "Literal",
                        src: "746:37:3",
                        subdenomination: null,
                        typeDescriptions: {
                          typeIdentifier:
                            "t_stringliteral_e9e37d52ed4fa5bb86064665ec03e9928be6922aeab693dd5f6b588d97427c32",
                          typeString:
                            'literal_string "Cannot transfer from burner address"',
                        },
                        value: "Cannot transfer from burner address",
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: "t_bool",
                          typeString: "bool",
                        },
                        {
                          typeIdentifier:
                            "t_stringliteral_e9e37d52ed4fa5bb86064665ec03e9928be6922aeab693dd5f6b588d97427c32",
                          typeString:
                            'literal_string "Cannot transfer from burner address"',
                        },
                      ],
                      id: 1161,
                      name: "require",
                      nodeType: "Identifier",
                      overloadedDeclarations: [-18, -18],
                      referencedDeclaration: -18,
                      src: "684:7:3",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        typeString: "function (bool,string memory) pure",
                      },
                    },
                    id: 1167,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    names: [],
                    nodeType: "FunctionCall",
                    src: "684:109:3",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_tuple$__$",
                      typeString: "tuple()",
                    },
                  },
                  id: 1168,
                  nodeType: "ExpressionStatement",
                  src: "684:109:3",
                },
                {
                  expression: {
                    argumentTypes: null,
                    arguments: [
                      {
                        argumentTypes: null,
                        expression: {
                          argumentTypes: null,
                          id: 1170,
                          name: "msg",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: -15,
                          src: "813:3:3",
                          typeDescriptions: {
                            typeIdentifier: "t_magic_message",
                            typeString: "msg",
                          },
                        },
                        id: 1171,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        lValueRequested: false,
                        memberName: "sender",
                        nodeType: "MemberAccess",
                        referencedDeclaration: null,
                        src: "813:10:3",
                        typeDescriptions: {
                          typeIdentifier: "t_address_payable",
                          typeString: "address payable",
                        },
                      },
                      {
                        argumentTypes: null,
                        id: 1172,
                        name: "recipient",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 1153,
                        src: "825:9:3",
                        typeDescriptions: {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                      },
                      {
                        argumentTypes: null,
                        id: 1173,
                        name: "amount",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 1155,
                        src: "836:6:3",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: "t_address_payable",
                          typeString: "address payable",
                        },
                        {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                        {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      ],
                      id: 1169,
                      name: "_transfer",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 1977,
                      src: "803:9:3",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        typeString: "function (address,address,uint256)",
                      },
                    },
                    id: 1174,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    names: [],
                    nodeType: "FunctionCall",
                    src: "803:40:3",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_tuple$__$",
                      typeString: "tuple()",
                    },
                  },
                  id: 1175,
                  nodeType: "ExpressionStatement",
                  src: "803:40:3",
                },
                {
                  expression: {
                    argumentTypes: null,
                    hexValue: "74727565",
                    id: 1176,
                    isConstant: false,
                    isLValue: false,
                    isPure: true,
                    kind: "bool",
                    lValueRequested: false,
                    nodeType: "Literal",
                    src: "861:4:3",
                    subdenomination: null,
                    typeDescriptions: {
                      typeIdentifier: "t_bool",
                      typeString: "bool",
                    },
                    value: "true",
                  },
                  functionReturnParameters: 1160,
                  id: 1177,
                  nodeType: "Return",
                  src: "854:11:3",
                },
              ],
            },
            documentation: null,
            functionSelector: "a9059cbb",
            id: 1179,
            implemented: true,
            kind: "function",
            modifiers: [],
            name: "transfer",
            nodeType: "FunctionDefinition",
            overrides: {
              id: 1157,
              nodeType: "OverrideSpecifier",
              overrides: [],
              src: "638:8:3",
            },
            parameters: {
              id: 1156,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 1153,
                  mutability: "mutable",
                  name: "recipient",
                  nodeType: "VariableDeclaration",
                  overrides: null,
                  scope: 1179,
                  src: "564:17:3",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_address",
                    typeString: "address",
                  },
                  typeName: {
                    id: 1152,
                    name: "address",
                    nodeType: "ElementaryTypeName",
                    src: "564:7:3",
                    stateMutability: "nonpayable",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                  },
                  value: null,
                  visibility: "internal",
                },
                {
                  constant: false,
                  id: 1155,
                  mutability: "mutable",
                  name: "amount",
                  nodeType: "VariableDeclaration",
                  overrides: null,
                  scope: 1179,
                  src: "583:14:3",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                  typeName: {
                    id: 1154,
                    name: "uint256",
                    nodeType: "ElementaryTypeName",
                    src: "583:7:3",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  value: null,
                  visibility: "internal",
                },
              ],
              src: "563:35:3",
            },
            returnParameters: {
              id: 1160,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 1159,
                  mutability: "mutable",
                  name: "",
                  nodeType: "VariableDeclaration",
                  overrides: null,
                  scope: 1179,
                  src: "664:4:3",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_bool",
                    typeString: "bool",
                  },
                  typeName: {
                    id: 1158,
                    name: "bool",
                    nodeType: "ElementaryTypeName",
                    src: "664:4:3",
                    typeDescriptions: {
                      typeIdentifier: "t_bool",
                      typeString: "bool",
                    },
                  },
                  value: null,
                  visibility: "internal",
                },
              ],
              src: "663:6:3",
            },
            scope: 1240,
            src: "546:326:3",
            stateMutability: "nonpayable",
            virtual: true,
            visibility: "public",
          },
          {
            body: {
              id: 1201,
              nodeType: "Block",
              src: "995:107:3",
              statements: [
                {
                  expression: {
                    argumentTypes: null,
                    arguments: [
                      {
                        argumentTypes: null,
                        id: 1189,
                        name: "account",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 1181,
                        src: "1032:7:3",
                        typeDescriptions: {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                      },
                      {
                        argumentTypes: null,
                        id: 1190,
                        name: "amount",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 1183,
                        src: "1041:6:3",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                        {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      ],
                      expression: {
                        argumentTypes: null,
                        id: 1186,
                        name: "controller",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 1118,
                        src: "1005:10:3",
                        typeDescriptions: {
                          typeIdentifier: "t_contract$_Controller_$865",
                          typeString: "contract Controller",
                        },
                      },
                      id: 1188,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      memberName: "increaseBalance",
                      nodeType: "MemberAccess",
                      referencedDeclaration: 530,
                      src: "1005:26:3",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        typeString: "function (address,uint256) external",
                      },
                    },
                    id: 1191,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    names: [],
                    nodeType: "FunctionCall",
                    src: "1005:43:3",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_tuple$__$",
                      typeString: "tuple()",
                    },
                  },
                  id: 1192,
                  nodeType: "ExpressionStatement",
                  src: "1005:43:3",
                },
                {
                  expression: {
                    argumentTypes: null,
                    arguments: [
                      {
                        argumentTypes: null,
                        arguments: [
                          {
                            argumentTypes: null,
                            id: 1196,
                            name: "controller",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 1118,
                            src: "1075:10:3",
                            typeDescriptions: {
                              typeIdentifier: "t_contract$_Controller_$865",
                              typeString: "contract Controller",
                            },
                          },
                        ],
                        expression: {
                          argumentTypes: [
                            {
                              typeIdentifier: "t_contract$_Controller_$865",
                              typeString: "contract Controller",
                            },
                          ],
                          id: 1195,
                          isConstant: false,
                          isLValue: false,
                          isPure: true,
                          lValueRequested: false,
                          nodeType: "ElementaryTypeNameExpression",
                          src: "1067:7:3",
                          typeDescriptions: {
                            typeIdentifier: "t_type$_t_address_$",
                            typeString: "type(address)",
                          },
                          typeName: {
                            id: 1194,
                            name: "address",
                            nodeType: "ElementaryTypeName",
                            src: "1067:7:3",
                            typeDescriptions: {
                              typeIdentifier: null,
                              typeString: null,
                            },
                          },
                        },
                        id: 1197,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        kind: "typeConversion",
                        lValueRequested: false,
                        names: [],
                        nodeType: "FunctionCall",
                        src: "1067:19:3",
                        tryCall: false,
                        typeDescriptions: {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                      },
                      {
                        argumentTypes: null,
                        id: 1198,
                        name: "amount",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 1183,
                        src: "1088:6:3",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                        {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      ],
                      id: 1193,
                      name: "transfer",
                      nodeType: "Identifier",
                      overloadedDeclarations: [1179],
                      referencedDeclaration: 1179,
                      src: "1058:8:3",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        typeString: "function (address,uint256) returns (bool)",
                      },
                    },
                    id: 1199,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    names: [],
                    nodeType: "FunctionCall",
                    src: "1058:37:3",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_bool",
                      typeString: "bool",
                    },
                  },
                  id: 1200,
                  nodeType: "ExpressionStatement",
                  src: "1058:37:3",
                },
              ],
            },
            documentation: null,
            functionSelector: "2a9ae4dc",
            id: 1202,
            implemented: true,
            kind: "function",
            modifiers: [],
            name: "depositController",
            nodeType: "FunctionDefinition",
            overrides: null,
            parameters: {
              id: 1184,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 1181,
                  mutability: "mutable",
                  name: "account",
                  nodeType: "VariableDeclaration",
                  overrides: null,
                  scope: 1202,
                  src: "955:15:3",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_address",
                    typeString: "address",
                  },
                  typeName: {
                    id: 1180,
                    name: "address",
                    nodeType: "ElementaryTypeName",
                    src: "955:7:3",
                    stateMutability: "nonpayable",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                  },
                  value: null,
                  visibility: "internal",
                },
                {
                  constant: false,
                  id: 1183,
                  mutability: "mutable",
                  name: "amount",
                  nodeType: "VariableDeclaration",
                  overrides: null,
                  scope: 1202,
                  src: "972:14:3",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                  typeName: {
                    id: 1182,
                    name: "uint256",
                    nodeType: "ElementaryTypeName",
                    src: "972:7:3",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  value: null,
                  visibility: "internal",
                },
              ],
              src: "954:33:3",
            },
            returnParameters: {
              id: 1185,
              nodeType: "ParameterList",
              parameters: [],
              src: "995:0:3",
            },
            scope: 1240,
            src: "928:174:3",
            stateMutability: "nonpayable",
            virtual: false,
            visibility: "public",
          },
          {
            body: {
              id: 1215,
              nodeType: "Block",
              src: "1207:70:3",
              statements: [
                {
                  expression: {
                    argumentTypes: null,
                    commonType: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                    id: 1213,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      argumentTypes: null,
                      arguments: [],
                      expression: {
                        argumentTypes: [],
                        expression: {
                          argumentTypes: null,
                          id: 1207,
                          name: "super",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: -25,
                          src: "1224:5:3",
                          typeDescriptions: {
                            typeIdentifier: "t_super$_Token_$1240",
                            typeString: "contract super Token",
                          },
                        },
                        id: 1208,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        lValueRequested: false,
                        memberName: "totalSupply",
                        nodeType: "MemberAccess",
                        referencedDeclaration: 1742,
                        src: "1224:17:3",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_function_internal_view$__$returns$_t_uint256_$",
                          typeString: "function () view returns (uint256)",
                        },
                      },
                      id: 1209,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: "functionCall",
                      lValueRequested: false,
                      names: [],
                      nodeType: "FunctionCall",
                      src: "1224:19:3",
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    nodeType: "BinaryOperation",
                    operator: "-",
                    rightExpression: {
                      argumentTypes: null,
                      arguments: [
                        {
                          argumentTypes: null,
                          id: 1211,
                          name: "burnerAddress",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 1120,
                          src: "1256:13:3",
                          typeDescriptions: {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                        },
                      ],
                      expression: {
                        argumentTypes: [
                          {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                        ],
                        id: 1210,
                        name: "balanceOf",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 1756,
                        src: "1246:9:3",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                          typeString:
                            "function (address) view returns (uint256)",
                        },
                      },
                      id: 1212,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: "functionCall",
                      lValueRequested: false,
                      names: [],
                      nodeType: "FunctionCall",
                      src: "1246:24:3",
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    src: "1224:46:3",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  functionReturnParameters: 1206,
                  id: 1214,
                  nodeType: "Return",
                  src: "1217:53:3",
                },
              ],
            },
            documentation: null,
            functionSelector: "d85d7f5b",
            id: 1216,
            implemented: true,
            kind: "function",
            modifiers: [],
            name: "totalAvailable",
            nodeType: "FunctionDefinition",
            overrides: null,
            parameters: {
              id: 1203,
              nodeType: "ParameterList",
              parameters: [],
              src: "1174:2:3",
            },
            returnParameters: {
              id: 1206,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 1205,
                  mutability: "mutable",
                  name: "",
                  nodeType: "VariableDeclaration",
                  overrides: null,
                  scope: 1216,
                  src: "1198:7:3",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                  typeName: {
                    id: 1204,
                    name: "uint256",
                    nodeType: "ElementaryTypeName",
                    src: "1198:7:3",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  value: null,
                  visibility: "internal",
                },
              ],
              src: "1197:9:3",
            },
            scope: 1240,
            src: "1151:126:3",
            stateMutability: "view",
            virtual: false,
            visibility: "public",
          },
          {
            body: {
              id: 1238,
              nodeType: "Block",
              src: "1337:162:3",
              statements: [
                {
                  expression: {
                    argumentTypes: null,
                    arguments: [
                      {
                        argumentTypes: null,
                        commonType: {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                        id: 1230,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        lValueRequested: false,
                        leftExpression: {
                          argumentTypes: null,
                          arguments: [
                            {
                              argumentTypes: null,
                              id: 1224,
                              name: "controller",
                              nodeType: "Identifier",
                              overloadedDeclarations: [],
                              referencedDeclaration: 1118,
                              src: "1376:10:3",
                              typeDescriptions: {
                                typeIdentifier: "t_contract$_Controller_$865",
                                typeString: "contract Controller",
                              },
                            },
                          ],
                          expression: {
                            argumentTypes: [
                              {
                                typeIdentifier: "t_contract$_Controller_$865",
                                typeString: "contract Controller",
                              },
                            ],
                            id: 1223,
                            isConstant: false,
                            isLValue: false,
                            isPure: true,
                            lValueRequested: false,
                            nodeType: "ElementaryTypeNameExpression",
                            src: "1368:7:3",
                            typeDescriptions: {
                              typeIdentifier: "t_type$_t_address_$",
                              typeString: "type(address)",
                            },
                            typeName: {
                              id: 1222,
                              name: "address",
                              nodeType: "ElementaryTypeName",
                              src: "1368:7:3",
                              typeDescriptions: {
                                typeIdentifier: null,
                                typeString: null,
                              },
                            },
                          },
                          id: 1225,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          kind: "typeConversion",
                          lValueRequested: false,
                          names: [],
                          nodeType: "FunctionCall",
                          src: "1368:19:3",
                          tryCall: false,
                          typeDescriptions: {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                        },
                        nodeType: "BinaryOperation",
                        operator: "==",
                        rightExpression: {
                          argumentTypes: null,
                          arguments: [
                            {
                              argumentTypes: null,
                              hexValue: "30",
                              id: 1228,
                              isConstant: false,
                              isLValue: false,
                              isPure: true,
                              kind: "number",
                              lValueRequested: false,
                              nodeType: "Literal",
                              src: "1399:1:3",
                              subdenomination: null,
                              typeDescriptions: {
                                typeIdentifier: "t_rational_0_by_1",
                                typeString: "int_const 0",
                              },
                              value: "0",
                            },
                          ],
                          expression: {
                            argumentTypes: [
                              {
                                typeIdentifier: "t_rational_0_by_1",
                                typeString: "int_const 0",
                              },
                            ],
                            id: 1227,
                            isConstant: false,
                            isLValue: false,
                            isPure: true,
                            lValueRequested: false,
                            nodeType: "ElementaryTypeNameExpression",
                            src: "1391:7:3",
                            typeDescriptions: {
                              typeIdentifier: "t_type$_t_address_$",
                              typeString: "type(address)",
                            },
                            typeName: {
                              id: 1226,
                              name: "address",
                              nodeType: "ElementaryTypeName",
                              src: "1391:7:3",
                              typeDescriptions: {
                                typeIdentifier: null,
                                typeString: null,
                              },
                            },
                          },
                          id: 1229,
                          isConstant: false,
                          isLValue: false,
                          isPure: true,
                          kind: "typeConversion",
                          lValueRequested: false,
                          names: [],
                          nodeType: "FunctionCall",
                          src: "1391:10:3",
                          tryCall: false,
                          typeDescriptions: {
                            typeIdentifier: "t_address_payable",
                            typeString: "address payable",
                          },
                        },
                        src: "1368:33:3",
                        typeDescriptions: {
                          typeIdentifier: "t_bool",
                          typeString: "bool",
                        },
                      },
                      {
                        argumentTypes: null,
                        hexValue:
                          "436f6e74726f6c6c6572206164647265737320616c7265616479207365742e",
                        id: 1231,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        kind: "string",
                        lValueRequested: false,
                        nodeType: "Literal",
                        src: "1415:33:3",
                        subdenomination: null,
                        typeDescriptions: {
                          typeIdentifier:
                            "t_stringliteral_a8b10fcad2182345bafe9591ee1801d5f6f6038bbdcdcaf9262b8bc8cb4798b0",
                          typeString:
                            'literal_string "Controller address already set."',
                        },
                        value: "Controller address already set.",
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: "t_bool",
                          typeString: "bool",
                        },
                        {
                          typeIdentifier:
                            "t_stringliteral_a8b10fcad2182345bafe9591ee1801d5f6f6038bbdcdcaf9262b8bc8cb4798b0",
                          typeString:
                            'literal_string "Controller address already set."',
                        },
                      ],
                      id: 1221,
                      name: "require",
                      nodeType: "Identifier",
                      overloadedDeclarations: [-18, -18],
                      referencedDeclaration: -18,
                      src: "1347:7:3",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        typeString: "function (bool,string memory) pure",
                      },
                    },
                    id: 1232,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    names: [],
                    nodeType: "FunctionCall",
                    src: "1347:111:3",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_tuple$__$",
                      typeString: "tuple()",
                    },
                  },
                  id: 1233,
                  nodeType: "ExpressionStatement",
                  src: "1347:111:3",
                },
                {
                  expression: {
                    argumentTypes: null,
                    id: 1236,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      argumentTypes: null,
                      id: 1234,
                      name: "controller",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 1118,
                      src: "1468:10:3",
                      typeDescriptions: {
                        typeIdentifier: "t_contract$_Controller_$865",
                        typeString: "contract Controller",
                      },
                    },
                    nodeType: "Assignment",
                    operator: "=",
                    rightHandSide: {
                      argumentTypes: null,
                      id: 1235,
                      name: "_controller",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 1218,
                      src: "1481:11:3",
                      typeDescriptions: {
                        typeIdentifier: "t_contract$_Controller_$865",
                        typeString: "contract Controller",
                      },
                    },
                    src: "1468:24:3",
                    typeDescriptions: {
                      typeIdentifier: "t_contract$_Controller_$865",
                      typeString: "contract Controller",
                    },
                  },
                  id: 1237,
                  nodeType: "ExpressionStatement",
                  src: "1468:24:3",
                },
              ],
            },
            documentation: null,
            functionSelector: "92eefe9b",
            id: 1239,
            implemented: true,
            kind: "function",
            modifiers: [],
            name: "setController",
            nodeType: "FunctionDefinition",
            overrides: null,
            parameters: {
              id: 1219,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 1218,
                  mutability: "mutable",
                  name: "_controller",
                  nodeType: "VariableDeclaration",
                  overrides: null,
                  scope: 1239,
                  src: "1306:22:3",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_contract$_Controller_$865",
                    typeString: "contract Controller",
                  },
                  typeName: {
                    contractScope: null,
                    id: 1217,
                    name: "Controller",
                    nodeType: "UserDefinedTypeName",
                    referencedDeclaration: 865,
                    src: "1306:10:3",
                    typeDescriptions: {
                      typeIdentifier: "t_contract$_Controller_$865",
                      typeString: "contract Controller",
                    },
                  },
                  value: null,
                  visibility: "internal",
                },
              ],
              src: "1305:24:3",
            },
            returnParameters: {
              id: 1220,
              nodeType: "ParameterList",
              parameters: [],
              src: "1337:0:3",
            },
            scope: 1240,
            src: "1283:216:3",
            stateMutability: "nonpayable",
            virtual: false,
            visibility: "public",
          },
        ],
        scope: 1241,
        src: "210:1291:3",
      },
    ],
    src: "39:1463:3",
  },
  compiler: {
    name: "solc",
    version: "0.6.9+commit.3e3065ac.Emscripten.clang",
  },
  networks: {
    1: {
      events: {
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "owner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "spender",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "value",
              type: "uint256",
            },
          ],
          name: "Approval",
          type: "event",
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "from",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "value",
              type: "uint256",
            },
          ],
          name: "Transfer",
          type: "event",
        },
      },
      links: {},
      address: "0x5497BC15265C33d59d1fC1F6064584d3f98eb79c",
      transactionHash:
        "0x7da842244f0b7271df758413c310ae4835d82aa9224ca920707bbef893664a7e",
    },
    42: {
      events: {
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "owner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "spender",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "value",
              type: "uint256",
            },
          ],
          name: "Approval",
          type: "event",
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "from",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "value",
              type: "uint256",
            },
          ],
          name: "Transfer",
          type: "event",
        },
      },
      links: {},
      address: "0xdB9Ca5Af5a0aC01EAD4CDE1c998d650D7C73F019",
      transactionHash:
        "0xe3952bb163eb127af817c20f90806baf9a2c862bc4a12b47443e041bcdfa4b29",
    },
  },
  schemaVersion: "3.2.0",
  updatedAt: "2020-10-28T16:07:29.209Z",
  networkType: "ethereum",
  devdoc: {
    methods: {
      "allowance(address,address)": {
        details: "See {IERC20-allowance}.",
      },
      "approve(address,uint256)": {
        details:
          "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.",
      },
      "balanceOf(address)": {
        details: "See {IERC20-balanceOf}.",
      },
      "decimals()": {
        details:
          "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.",
      },
      "decreaseAllowance(address,uint256)": {
        details:
          "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.",
      },
      "increaseAllowance(address,uint256)": {
        details:
          "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.",
      },
      "name()": {
        details: "Returns the name of the token.",
      },
      "symbol()": {
        details:
          "Returns the symbol of the token, usually a shorter version of the name.",
      },
      "totalSupply()": {
        details: "See {IERC20-totalSupply}.",
      },
      "transferFrom(address,address,uint256)": {
        details:
          "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.",
      },
    },
  },
  userdoc: {
    methods: {},
  },
};
module.exports = { tokenAbi };
